name: Test DF TA on Push

on: [push]

env:
  LD_LIBRARY_PATH: '/tmp/lib:/usr/lib:/usr/local/lib/'
  TA_LIBRARY_PATH: '/tmp/lib/'
  TA_INCLUDE_PATH: '/tmp/include/'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: Install C dependencies
        run: |
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/tmp
          make
          make install
          rm -rf ta-lib*
          pip install pandas
          pip install numpy>=1.20.2
          pip install TA-Lib
          python -c 'import talib; print(talib.EMA)'
          python -c'import numpy as np; print(np.__version__)'

      - name: checkout source
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 pandas-ta --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 pandas-ta --count --exit-zero --max-complexity=10 --max-line-length=127 --show-source --statistics

      - name: Test with pytest
        run: |
          pytest